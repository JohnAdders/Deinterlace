/////////////////////////////////////////////////////////////////////////////
// $Id: Deinterlace.idl,v 1.5 2001-12-13 16:53:28 adcockj Exp $
/////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2000 John Adcock.  All rights reserved.
/////////////////////////////////////////////////////////////////////////////
//
//	This file is subject to the terms of the GNU General Public License as
//	published by the Free Software Foundation.  A copy of this license is
//	included with this software distribution in the file COPYING.txt.  If you
//	do not have a copy, you may obtain a copy by writing to the Free
//	Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
//
//	This software is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details
//
//  In addition, as a special exception, John Adcock
//  gives permission to link the code of this program with
//  DirectShow Filter graph and distribute linked combinations including
//  the two.  You must obey the GNU General Public License in all
//  respects for all of the code used other than that which mapipulated 
//  the filter graph. If you modify
//  this file, you may extend this exception to your version of the
//  file, but you are not obligated to do so.  If you do not wish to
//  do so, delete this exception statement from your version.
//
/////////////////////////////////////////////////////////////////////////////

import "oaidl.idl";
import "ocidl.idl";

/////////////////////////////////////////////////////////////////////////////
// this file defines the GUIDs that the filter will register under
// 
// if you wish to ship this filter with another product and do not
// want to interfeer with any future changes to the public
// veriosn of this filter please generate new GUID values
// for all the values below as has been done already with the HAUPPAUGE_BUILD
// define
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
// This is the version of the interface supported by version 1.0.0
//
// INTERFACE FIXED
//
// Applications may write to this interface and by allowing them
// to do so we have contracted to provided this interface for ever
/////////////////////////////////////////////////////////////////////////////
[
	object,
	uuid(463D645C-48F7-11d4-8464-0008C782A257),
	helpstring("IDeinterlace Interface"),
	pointer_default(unique)
]
interface IDeinterlace : IUnknown
{
    [propget, id(1), helpstring("property DeinterlaceType")] 
    HRESULT DeinterlaceType([out, retval] int* pVal);
    [propput, id(1), helpstring("property DeinterlaceType")] 
    HRESULT DeinterlaceType([in] int newVal);
    ////////////////////////////////
    // Do not add anything here
    // This interface has been fixed
    ////////////////////////////////
}


/////////////////////////////////////////////////////////////////////////////
// This is the version of the interface supported by the current version
//
// INTERFACE IN FLUX
//
// it may be changed at any time, do not code applications to this
// interface unless you are prepared to keep then up to date
// if we change this your application may collapse in a big heap
/////////////////////////////////////////////////////////////////////////////
[
	object,
	uuid(7402D283-1AA1-4bbb-B2D7-9B677270D531),
	helpstring("IDeinterlace2 Interface"),
	pointer_default(unique)
]
interface IDeinterlace2 : IDeinterlace
{
    [propget, id(2), helpstring("property IsOddFieldFirst")] 
    HRESULT IsOddFieldFirst([out, retval] VARIANT_BOOL* pVal);
    [propput, id(2), helpstring("property IsOddFieldFirst")] 
    HRESULT IsOddFieldFirst([in] VARIANT_BOOL newVal);
    [propget, id(3), helpstring("property DScalerPluginName")] 
    HRESULT DScalerPluginName([out, retval] BSTR* pVal);
    [propput, id(3), helpstring("property DScalerPluginName")] 
    HRESULT DScalerPluginName([in] BSTR newVal);
    [propget, id(4), helpstring("property RefreshRateDouble")] 
    HRESULT RefreshRateDouble([out, retval] VARIANT_BOOL* pVal);
    [propput, id(4), helpstring("property RefreshRateDouble")] 
    HRESULT RefreshRateDouble([in] VARIANT_BOOL newVal);
};

[
#ifdef HAUPPAUGE_BUILD
	uuid(7B08AC97-2997-4D9D-BE7B-8DB876944E54),
#else
	uuid(702D0006-FCE7-4392-827B-C7580DDB0425),
#endif
	version(1.0),
	helpstring("Deinterlace 1.1 Type Library")
]
library DeinterlaceLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
#ifdef HAUPPAUGE_BUILD
    	uuid(463D645D-48F7-11d4-8464-0008C782A257),
#else
	    uuid(437B0D3A-4689-4fa6-A7DD-EB4928203C2F),
#endif
		helpstring("Deinterlace Class")
	]
	coclass Deinterlace
	{
		[default] interface IDeinterlace2;
	};

	[
#ifdef HAUPPAUGE_BUILD
    	uuid(463D645E-48F7-11d4-8464-0008C782A257),
#else
	    uuid(E1AA698A-C292-488d-8F3A-29D44FB070CA),
#endif
		helpstring("DeinterlacePropertyPage Class")
	]
	coclass DeinterlacePropertyPage
	{
		[default] interface IPropertyPage;
	};

	[
#ifdef HAUPPAUGE_BUILD
    	uuid(B26BFF59-55BB-4a9e-94F9-56652554E42F),
#else
	    uuid(E5C790A0-7D55-45d5-8422-06739B8BC2D9),
#endif
		helpstring("DeinterlaceAboutPage Class")
	]
	coclass DeinterlaceAboutPage
	{
		[default] interface IPropertyPage;
	};
};
